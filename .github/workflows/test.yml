name: Tests

on:
  push:
    branches:
      - "*"
  pull_request:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        python: ["3.12", "3.13"]
    services:
      postgres:
        image: postgres:16-alpine
        env:
          POSTGRES_DB: salute
          POSTGRES_USER: salute
          POSTGRES_PASSWORD: salute
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U salute -d salute"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python }}
      - name: Install Poetry
        run: pip install poetry
      - name: Use in-project virtualenv
        run: poetry config virtualenvs.in-project true
      - uses: actions/cache@v4
        with:
          path: .venv/
          key: ${{ runner.os }}-${{ matrix.python }}-pip-${{ hashFiles('poetry.lock') }}-${{ hashFiles('pyproject.toml') }}
      - name: Install dependencies
        run: poetry install --without=docs
      - name: Static type checking
        run: make type
      - name: Lint
        run: make lint
      - name: Formatting
        run: make format-check
      - name: Unit tests
        run: make test
      - name: Django Static Checks
        run: make check