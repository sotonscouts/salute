# Generated by Django 5.2.1 on 2025-05-18 19:19

import uuid

import django.db.models.deletion
from django.db import migrations, models
from django.db.backends.base.schema import BaseDatabaseSchemaEditor
from django.db.migrations.state import StateApps


def add_locality_to_groups(apps: StateApps, schema_editor: BaseDatabaseSchemaEditor) -> None:
    """
    Add locality to groups and set the default locality for existing groups.
    """
    Group = apps.get_model("hierarchy", "Group")
    Locality = apps.get_model("hierarchy", "Locality")

    for group in Group.objects.all():
        # Set the locality to be the District name for existing groups
        locality, _ = Locality.objects.get_or_create(name=group.district.unit_name)
        group.locality = locality
        group.save(update_fields=["locality"])


class Migration(migrations.Migration):
    dependencies = [
        ("hierarchy", "0002_add_section_mailing_slug"),
    ]

    operations = [
        migrations.AlterModelOptions(
            name="group",
            options={"ordering": ("locality", "local_unit_number")},
        ),
        migrations.AlterField(
            model_name="group",
            name="local_unit_number",
            field=models.PositiveSmallIntegerField(),
        ),
        migrations.CreateModel(
            name="Locality",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                        verbose_name="Salute ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=255)),
            ],
            options={
                "verbose_name_plural": "localities",
                "ordering": ("name",),
                "constraints": [
                    models.UniqueConstraint(
                        fields=("name",),
                        name="unique_locality_name",
                        violation_error_message="A locality must have a unique name.",
                    )
                ],
            },
        ),
        migrations.AddField(
            model_name="group",
            name="locality",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                related_name="groups",
                to="hierarchy.locality",
            ),
        ),
        migrations.RunPython(
            add_locality_to_groups,
            reverse_code=migrations.RunPython.noop,
        ),
        migrations.AlterField(
            model_name="group",
            name="locality",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                related_name="groups",
                to="hierarchy.locality",
            ),
        ),
        migrations.AddConstraint(
            model_name="group",
            constraint=models.UniqueConstraint(
                fields=("local_unit_number", "locality"),
                name="unique_local_unit_number_within_locality",
                violation_error_message="A group must have a unique local unit number within its locality.",
            ),
        ),
    ]
